#!/bin/bash

# if lsd is installed, use lsd instead of ls
if command -v lsd &>/dev/null; then
	alias ls='lsd --group-dirs=first'
fi

# [r]estart/[r]esource [z]shrc
alias rz="source \$HOME/.zshrc"
alias ra="source \$HOME/.aliases"
alias re="source \$HOME/.exports"

# ls aliases
alias ll='ls -alF'
alias la='ls -A'
# alias l='ls -CF'
alias l='ls -F'
alias tree='lsd --tree'

# add color to grep
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# vim aliases
alias v="lvim"
alias vim="lvim"
# alias nvim="lvim"
# alias oldnvim="\nvim"
alias oldvim="\vim"
alias vimf="vim \$(fzf)"
alias vf="vim \$(fzf)"
# alias lv="nvim -u ~/.config/lazyvim/init.lua"
alias nv="\nvim"

# git aliases
alias gs="git status"
alias gl="git log"

# application aliases
# alias nfi="neofetch --wpm --backend kitty --source /media/sf_Downloads/wallpapers/gruvbox/new-project-5.png"
# alias nfi="neofetch --wpm --backend kitty --source \$(find /media/sf_Downloads/wallpapers/gruvbox/ -not -path /media/sf_Downloads/wallpapers/gruvbox/ | sort --random-sort | head -1)"
alias nfi="neofetch --wpm --backend kitty --source \$(find /media/sf_Downloads/wallpapers/lunar-tokyo-night/ -not -path /media/sf_Downloads/wallpapers/lunar-tokyo-night/ | sort --random-sort | head -1)"
# alias rw="nitrogen --set-scaled --random /media/sf_Downloads/wallpapers/gruvbox"
alias rwg="nitrogen --set-zoom-fill --random /media/sf_Downloads/wallpapers/gruvbox"
alias rwl="nitrogen --set-zoom-fill --random /media/sf_Downloads/wallpapers/lunar-tokyo-night"
alias tn="notify-send -i ~/.config/awesome/awesome-wm-widgets/battery-widget/spaceman.jpg -t 10000 'test' 'hello this is a test notification!'"
alias obsidian="/opt/obsidian/Obsidian-0.15.9.AppImage"
# alias cs164-sshfs="sudo sshfs -o allow_other cs164-aak@cedar.cs.berkeley.edu:/home/cc/cs164/fa22/class/cs164-aak/ ~/Classes/cs164/cs164-aak -o IdentityFile=/home/user/.ssh/id_ed25519 && pushd ~/Classes/cs164/cs164-aak"
alias lg="lazygit"
# alias hx="/opt/helix/helix-22.12-x86_64.AppImage"
if command -v ranger &>/dev/null; then
	alias r="ranger"
fi
alias cs='colorscript -r'
if test "$(uname -n)" = "cerebro"; then
	alias nf="neofetch --ascii_distro lubuntu"
else
	alias nf="neofetch"
fi
alias ld="lazydocker"
alias kc="kubectl"
# alias rm="rm -i"
alias mv="mv -i"
alias cp="cp -i"
alias mkdir="mkdir -p"

# "blazingly fast" aliases
# [b]ookmark, fast switcher between dirs on the stack using fzf
# first sed removes leading whitespace
# second sed removes everything after then number (which relies on the space after the number)
alias b="pushd \"+\$(dirs -v | fzf | sed -e 's/^[[:space:]]*//' | sed -e 's/[[:space:]].*//')\""
# alias p="pushd \$(find . -type d -print | fzf)"
# pushd to any dir starting at $HOME
alias p="pushd \"\$(fd -H -t d -E .git . \$HOME | fzf)\""
# pushd to any dir in the cwd
alias pd="pushd \"\$(fd -H -t d -E .git | fzf)\""
# [t]mux [s]witch session with fzf
alias ts="tmux switch-client -t \$(tmux ls | fzf | awk '{print \$1}')"
# awk_first() { awk '{print $1}' "$@"; }
# alias ts="tmux switch-client -t \$(tmux ls | fzf | awk_first)"
# ts() { tmux switch-client -t "$(tmux ls | fzf | awk '{print $1}')"; }

# switch python virtual environments
swenv() {
	command -v deactivate &>/dev/null && deactivate
	venv_path_list=(".")
	# venv_path_list=$(echo ".venv $HOME/venvs" | awk '{ gsub(" ", "\n"); print }')
	[ -d "$HOME/venvs" ] && venv_path_list+=("$HOME/venvs")

	# find all directories that contain pyvenv.cfg
	# find . -type f -name "pyvenv.cfg" -exec dirname {} \;
	venv=$(printf "%s\n" "${venv_path_list[@]}" | xargs -I % find % -type f -name "pyvenv.cfg" -exec dirname {} \; | fzf)

	# if command -v fd &> /dev/null; then
	#     venv=$(printf "%s\n" "${venv_path_list[@]}" | xargs -I {} fd -t d -d 1 . {} | fzf)
	# else
	#     venv=$(printf "%s\n" "${venv_path_list[@]}" | xargs -I {} find {} -path "{}" -o -print -maxdepth 1 -type d | fzf)
	# fi

	source "$venv/bin/activate"
}

# marix get-user-certs for all 4 envs
matrix_all_certs() {
	if command -v matrix &>/dev/null; then
		envs_list=("demo1" "crt" "staging" "prod")
		for env in "${envs_list[@]}"; do
			# get user certs with matrix
			printf "Getting certs for %s:\n" "$env"
			matrix_cmd="matrix get-user-cert -e $env"
			echo "$matrix_cmd"
			eval "$matrix_cmd"
		done
	else
		echo 'Did you add matrix to your $PATH?\nTry:\n\texport $PATH="$PATH:/path/to/matrix/installation/dir"'
	fi
}

alias mac="matrix_all_certs"

# import matrix certs to Keychain Access
import_matrix_certs() {
	envs_list=("demo1" "crt" "staging" "prod")
	for env in "${envs_list[@]}"; do
		# import usercerts.p12 on the command line, avoiding password dialogue box
		p12_path="$HOME/.ves-internal/$env/usercerts.p12"
		if [ -f "$p12_path" ]; then
			printf "Importing %s to Keychain Access:\n" "$p12_path"
			import_cmd="sudo security import $p12_path -P 'volterra'"
			echo "$import_cmd"
			eval "$import_cmd"
		else
			echo "Did you run matrix_all_certs() or matrix get-user-cert -e $env"
		fi
	done
}

alias imc="import_matrix_certs"

gc_login() {
	export USE_GKE_GCLOUD_AUTH_PLUGIN=True
	kubectl config use-context gke_devtest-293809_us-east4_gc01-int-ves-io
	kubectl cluster-info 2>/dev/null || (gcloud auth login --project=devtest-293809 && gcloud container clusters get-credentials gc01-int-ves-io --region us-east4)
}

# update Brewfile
alias brewup="brew bundle dump --file=~/dotfiles/Brewfile --force"

# fzf colorscheme
_gen_fzf_default_opts() {
	# local base03="234"
	# local base02="235"
	# local base01="240"
	# local base00="241"
	# local base0="244"
	# local base1="245"
	# local base2="254"
	# local base3="230"
	# local yellow="136"
	# local orange="166"
	# local red="160"
	# local magenta="125"
	# local violet="61"
	# local blue="33"
	# local cyan="37"
	# local green="64"
	# Uncomment for truecolor, if your terminal supports it.
	base03="#002b36"
	base02="#292e42"
	base01="#1a1b26"
	base00="#16161e"
	base0="#839496"
	base1="#93a1a1"
	base2="#c0caf5"
	base3="#a9b1d6"
	yellow="#e0af68"
	orange="#ff9e64"
	red="#f7768e"
	magenta="#bb9af7"
	violet="#bb9af7"
	blue="#7aa2f7"
	cyan="#7dcfff"
	cyan1="#27a1b9"
	green="#9ece6a"

	# Comment and uncomment below for the light theme.

	# Tokyonight Night color scheme for fzf
	export FZF_DEFAULT_OPTS="
    --color fg:-1,bg:-1,hl:$cyan1,fg+:$base2,bg+:$base02,hl+:$cyan1
    --color info:$green,prompt:$blue,pointer:$red,marker:$blue,spinner:$cyan1
    "
	## Solarized Light color scheme for fzf
	#export FZF_DEFAULT_OPTS="
	#  --color fg:-1,bg:-1,hl:$blue,fg+:$base02,bg+:$base2,hl+:$blue
	#  --color info:$yellow,prompt:$yellow,pointer:$base03,marker:$base03,spinner:$yellow
	#"
}

_gen_fzf_default_opts
# unset FZF_DEFAULT_OPTS
