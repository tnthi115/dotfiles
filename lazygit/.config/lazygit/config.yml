#

# See full config options:
# https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md

gui:
  enlargedSideViewLocation: top
  nerdFontsVersion: "3"
  showFileIcons: true
git:
  paging:
    colorArg: always
    # useConfig: true
    pager: delta --dark --paging=never
  commit:
    autoWrapCommitMessage: false
customCommands:
  - key: "Z"
    command: "git cz c"
    description: "Commit with commitizen."
    context: "files"
    loadingText: "Opening commitizen commit tool"
    output: terminal
  - key: "O"
    context: "files"
    command: 'opencode run --model github-copilot/gpt-4.1 "You are generating a single Conventional Commit message for the currently staged changes ONLY. Requirements: 1) Provide exactly one commit message (subject + optional body) describing WHAT changed and WHY at a high level. 2) Follow Conventional Commits (type(scope?): subject). 3) Keep subject <= 72 chars, imperative, no trailing period. 4) Include body only if it adds useful context (wrap at 72). 5) DO NOT include: co-authored-by lines, references to opencode, AGENTS.md quotations, generic warnings about secrets, statements about no functional changes, or any meta commentary/instructions. 6) Do not invent changesâ€”base strictly on the diff. 7) If multiple logical changes exist, choose the dominant one or use a suitable type like chore/refactor/docs/test/etc. 8) Never mention internal prompting mechanics. Output format: Just the final commit message ready to pass to git commit -m (subject line, then blank line, then body if present). After outputting the message, perform the commit. Output ONLY the commit message and the commit result."'
    description: "Generate and make Conventional Commit with opencode (prefers global AGENTS.md, then project)"
    output: terminal
    prompts:
      - type: "confirm"
        title: "Generate and commit with opencode"
        body: "Generate a Conventional Commit message for the current staged changes and make the commit using opencode?"
  - key: "O"
    context: "commits"
    description: "Reword commit message with opencode (HEAD or non-HEAD, automated)"
    command: '~/dotfiles/lazygit/bin/reword-commit-with-opencode.sh {{.SelectedCommit.Sha}} "{{.Form.extra}}"'
    output: terminal
    prompts:
      - type: "input"
        title: "Extra instructions for opencode (optional)"
        initialValue: ""
        key: "extra"
      - type: "confirm"
        title: "Reword commit with opencode"
        body: "Are you sure you want to reword the selected commit using opencode? This will rewrite history for non-HEAD commits."
  # - key: "m"
  #   command: "glab mr create --assignee t.thi --draft --fill --fill-commit-body --remove-source-branch --squash-before-merge --web"
  #   description: "Create gitlab MR with glab cli."
  #   context: "localBranches"
  #   loadingText: "Creating MR"
  #   prompts:
  #     - type: "confirm"
  #       title: "Create MR"
  #       body: "Are you sure you want to create the MR?"
  #   output: terminal
os:
  openLink: open "$(echo "{{link}}" | sed 's/%2F/\//g')"
