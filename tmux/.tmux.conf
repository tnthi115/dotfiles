# vim:foldmethod=marker:foldlevel=0

# ----------------------------=== General ===------------------------- {{{
# Default shell
# This unfortunately introduces a delay when opening a tmux popup window
set-option -g default-shell "/opt/homebrew/bin/fish"

# Title window
set -g set-titles on
set -g set-titles-string "#T"

# Terminal colors
# set -ga terminal-overrides ",tmux-256color*:Tc"
set -g default-terminal "tmux-256color"
set-environment -g COLORTERM "truecolor"
set -s escape-time 0

# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Switch to another existing session when you close the final window of the current session.
set-option -g detach-on-destroy off

# Remap prefix from 'C-b' to 'C-e' because 'C-b' is too much of a stretch on
# QWERTY. 'C-a' is also very common.
unbind C-b
set-option -g prefix C-e
# set-option -g prefix C-space
bind-key C-e send-prefix

# Split panes using | and - and to open in the current directory.
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
# bind v split-window -h -c "#{pane_current_path}"
# bind s split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %
# bind '"' split-window -c "#{pane_current_path}"
# bind % split-window -h -c "#{pane_current_path}"

# Set new window to open in current directory.
bind c new-window -c "#{pane_current_path}"

# Reload config file (change file location to your the tmux.conf you want to use).
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# vim-like pane switching
bind -r ^ last-window
# bind -r k select-pane -U
# bind -r j select-pane -D
# bind -r h select-pane -L
# bind -r l select-pane -R
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# Keybind to open opencode in a vertical split to the right
bind-key O split-window -h -c "#{pane_current_path}" "opencode"

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Enable vi keybindings.
set-window-option -g mode-keys vi
# set-window-option -g xterm-keys on
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Interactive pane joining.
bind-key m choose-window -F "#{window_index}: #{window_name}" "join-pane -v -t %%"
bind-key M choose-window -F "#{window_index}: #{window_name}" "join-pane -h -t %%"

# bind y run -b "tmux show-buffer | xclip -in -selection clipboard"\; display-message "copied tmux buffer to system clipboard"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Popup window to switch sessions with fzf
# bind-key o display-popup -E "tmux switch-client -t \$(tmux ls | fzf | awk '{print \$1}')"
# faster version compared to using run-shell and fzf-tmux
unbind o
bind-key -n C-o display-popup -E "sesh connect \"$(
	sesh list | fzf \
		--border-label ' sesh ' --prompt '‚ö°' \
		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö° )+reload(sesh list)'
)\""
# bind-key "o" run-shell "sesh connect \"$(
# 	sesh list | fzf-tmux -p 55%,60% \
# 		--border-label ' sesh ' --prompt '‚ö°' \
# 		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
# 		--bind 'tab:down,btab:up' \
# 		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
# 		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
# 		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
# 		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
# 		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
# 		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö° )+reload(sesh list)'
# )\""
bind -N "last-session (via sesh) " L run-shell "sesh-dev last"
# unbind 'o'

# Search windoews in current session
unbind f
bind-key "f" display-popup -E "\
  tmux list-windows -F '#{window_index} #{window_name}' |\
  grep -v '^$' |\
  fzf --header '  Window Picker' --prompt 'ü™ü ' |\
  awk '{print $1}' |\
  xargs tmux select-window -t"

# # tmux-sessionx
# set -g @sessionx-bind 'o'

# For 3rd/image.nvim:
set -gq allow-passthrough on
set -g visual-activity off

# numToStr/Navigator.nvim integration
# https://github.com/numToStr/Navigator.nvim/wiki/Tmux-Integration
# version_pat='s/^tmux[^0-9]*([.0-9]+).*/\1/p'
#
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# tmux_version="$(-V | sed -En "$version_pat")"
# setenv -g tmux_version "$tmux_version"
#
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#   "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#   "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\\ select-pane -l

# Unbinding Navigator.nvim binds in tmux
unbind -n C-h
unbind -n C-j
unbind -n C-k
unbind -n C-l
unbind -n C-\\

# Move current pane to a new window
bind-key b break-pane

# Join current window to another window (prompts for window to join)
bind-key B command-prompt -p "Join pane to window:" "join-pane -t ':%%'"

# URL fzf picker
unbind C-u
bind-key "u" display-popup -E "\
  tmux capture-pane -J -p |\
  grep -oE '(https?://)[^ <>\"]+' |\
  sort | uniq |\
  fzf --header '  URL Picker' --prompt 'üîó ' |\
  xargs open"

# }}}

# ----------------------------=== Colors ===-------------------------- {{{

# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters

# TODO: update colors to grab colors from the terminal (reference neofetch.conf)

# --> Kanagawa-dragon
# thm_bg="#181616"
# thm_fg="#c5c9c5"
# thm_red="#c4746e"
# thm_green="#8a9a7b"
# thm_yellow="#c4b28a"
# thm_orange="#b6927b"
# # thm_orange="#b98d7b"
# thm_blue="#8ba4b0"
# thm_magenta="#a292a3"
# thm_cyan="#8ea4a2"
# thm_white="#c8c093"
# thm_gray="#a6a69c"
# thm_pink="#e46876"
# thm_black="#0d0c0c"
# thm_black4="#0d0c0c"

# --> Kanagawa-wave
thm_bg="#1f1f28"
# thm_fg="#dcd7ba"
thm_fg="#e8e4d8"
thm_red="#c34043"
# thm_red="#E46876"
thm_green="#76946a"
thm_yellow="#c0a36e" # yellow
thm_orange="#FF9E3B"
thm_blue="#7aa2f7"
thm_magenta="#957fb8"
thm_cyan="#6a9589"
# thm_white="#c8c093"
thm_white="#e8e4d8"
thm_gray="#727169"
thm_pink="#d27e99"
thm_black="#16161d"
thm_black4="#16161d"

# # --> Catppuccin
# thm_bg="#1e1e2e"
# thm_fg="#cdd6f4"
# thm_gray="#bac2de"
# thm_cyan="#9399b2"
# thm_magenta="#9399b2"
# thm_pink="#f5c2e7"
# thm_red="#f38ba8"
# thm_green="#a6e3a1"
# thm_blue="#89b4fa"
# thm_orange="#fab387"
# thm_black="#181825"
# thm_black4="#11111b"

# # --> Gruvbox Dark
# thm_bg="#32302f"
# # thm_bg="#504945"
# # thm_fg="#c5c8c6"
# # thm_fg="#ebdbb2"
# # thm_fg="#d4be98"
# thm_fg="#e2cca9"
# thm_gray="#928374"
# thm_cyan="#689d6a"
# thm_magenta="#b16286"
# thm_pink="#d3869b"
# thm_red="#cc241d"
# thm_green="#98971a"
# thm_blue="#458588"
# thm_orange="#d79921"
# thm_black="#282828"
# # thm_black="#010101"
# # thm_black4="#928374"
# thm_black4="#111111"
# thm_white="#a89984"

# --> Gruvbox Material Dark
# thm_bg="#32302f"
# # thm_bg="#504945"
# # thm_fg="#c5c8c6"
# # thm_fg="#ebdbb2"
# # thm_fg="#d4be98"
# thm_fg="#e2cca9"
# thm_gray="#928374"
# thm_cyan="#8bba7f"
# thm_magenta="#d3869b"
# thm_pink="#d3869b"
# thm_red="#f2594b"
# thm_green="#b0b846"
# thm_blue="#80aa9e"
# thm_orange="#e3a84e"
# # thm_black="#282828"
# thm_black="#1d2021"
# # thm_black="#010101"
# # thm_black4="#928374"
# thm_black4="#111111"
# thm_white="#a89984"

# # --> Tokyonight Night
# thm_bg="#1a1b26"
# thm_fg="#a9b1d6"
# thm_gray="#545c7e"
# thm_cyan="#7dcfff"
# # thm_cyan="#27a1b9"
# thm_magenta="#bb9af7"
# thm_pink="#ebbcba"
# thm_red="#f7768e"
# thm_green="#9ece6a"
# thm_blue="#7aa2f7"
# thm_orange="#ff9e64"
# thm_black="#1a1b26"
# thm_black4="#16161e"
# thm_white="#c0caf5"

# # --> Rose Pine Moon
# # thm_bg="#232136"
# thm_bg="#393552"
# thm_fg="#e0def4"
# thm_gray="#6e6a86"
# thm_cyan="#ea9a97"
# thm_magenta="#c4a7e7"
# thm_pink="#d3869b"
# thm_red="#eb6f92"
# thm_green="#3e8fb0"
# thm_blue="#9ccfd8"
# thm_orange="#f6c177"
# # thm_black="#393552"
# thm_black="#232136"
# thm_black4="#2a273f"
# thm_white="#e0def4"

# # --> Rose Pine Main
# # thm_bg="#191724"
# thm_bg="#26233a"
# thm_fg="#e0def4"
# thm_gray="#6e6a86"
# thm_cyan="#ebbcba"
# thm_magenta="#c4a7e7"
# thm_pink="#d3869b"
# thm_red="#eb6f92"
# thm_green="#31748f"
# thm_blue="#9ccfd8"
# thm_orange="#f6c177"
# # thm_black="#26233a"
# thm_black="#191724"
# thm_black4="#2a273f"
# thm_white="#e0def4"

# }}}

# ----------------------------=== Theme ===--------------------------- {{{

# status
set -g status-interval 1
set -g escape-time 10
set -g focus-events on
set -g status "on"
# set -g status-bg "${thm_black}"
# transparent background
set-option -g status-style bg=default
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

# messages
set -g message-style fg="${thm_cyan}",bg="${thm_black}",align="centre"
set -g message-command-style fg="${thm_cyan}",bg="${thm_black}",align="centre"

# panes
set -g pane-border-style fg="${thm_black}"
set -g pane-active-border-style fg="${thm_blue}"
# set -g pane-active-border-style fg="${thm_black}"
# set-window-option -g pane-border-status off

# windows
# setw -g window-status-activity-style fg="${thm_fg}",bg="${thm_bg}",none
setw -g window-status-activity-style fg="${thm_fg}",bg=default,none
setw -g window-status-separator ""
# setw -g window-status-style fg="${thm_fg}",bg="${thm_bg}",none
setw -g window-status-style fg="${thm_fg}",bg=default,none

# statusline: ÔÜÆ - path, Óûï - session, ÔóØ Û∞É∞ - date and time
statusline_path=ÔÜÆ
statusline_session=Óûï
statusline_date=Û∞É∞

# for some reason when set to top it is no longer transparent
# set-option -g status-position top
set-option -g status-position bottom
set -g status-left ""
# set -g status-right "#[fg=$thm_pink,bg=$thm_black,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_pink,nobold,nounderscore,noitalics] ÔÜÆ #[fg=$thm_fg,bg=$thm_black] #W #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_black] #{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] $statusline_session #[fg=$thm_fg,bg=$thm_black] #S #[fg=$thm_blue,bg=$thm_black,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_blue,nobold,nounderscore,noitalics] $statusline_date #[fg=$thm_fg,bg=$thm_black] %Y-%m-%d %H:%M "
# show truncated path
# set -g status-right "#[fg=$thm_magenta,bg=$thm_black,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_magenta,nobold,nounderscore,noitalics] ÔÜÆ #[fg=$thm_fg,bg=$thm_black] #{b:pane_current_path} #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_black] #{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] $statusline_session #[fg=$thm_fg,bg=$thm_black] #S #[fg=$thm_blue,bg=$thm_black,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_blue,nobold,nounderscore,noitalics] $statusline_date #[fg=$thm_fg,bg=$thm_black] %Y-%m-%d %H:%M "
# show full path
# set -g status-right "#[fg=$thm_magenta,bg=$thm_black,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_magenta,nobold,nounderscore,noitalics] ÔÜÆ #[fg=$thm_fg,bg=$thm_black] #{pane_current_path} #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_black] #{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] $statusline_session #[fg=$thm_fg,bg=$thm_black] #S #[fg=$thm_blue,bg=$thm_black,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_blue,nobold,nounderscore,noitalics] $statusline_date #[fg=$thm_fg,bg=$thm_black] %Y-%m-%d %H:%M"
# set -g status-right "#[fg=$thm_magenta,bg=$thm_black,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_magenta,nobold,nounderscore,noitalics] $statusline_path #[fg=$thm_fg,bg=$thm_black] #{s|/home/user|~|:pane_current_path} #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_black] #{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] $statusline_session #[fg=$thm_fg,bg=$thm_black] #S #[fg=$thm_blue,bg=$thm_black,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_blue,nobold,nounderscore,noitalics] $statusline_date #[fg=$thm_fg,bg=$thm_black] %Y-%m-%d %H:%M"
# set -g status-right "#[fg=$thm_magenta,bg=default,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_magenta,nobold,nounderscore,noitalics] $statusline_path #[fg=$thm_fg,bg=default] #{s|/home/user|~|:pane_current_path} #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=default] #{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] $statusline_session #[fg=$thm_fg,bg=default] #S #[fg=$thm_blue,bg=default,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_blue,nobold,nounderscore,noitalics] $statusline_date #[fg=$thm_fg,bg=default] %Y-%m-%d %H:%M"
# without time
# set -g status-right "#[fg=$thm_magenta,bg=$thm_black,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_magenta,nobold,nounderscore,noitalics] ÔÜÆ #[fg=$thm_fg,bg=$thm_black] #{pane_current_path} #{?client_prefix,#[fg=$thm_red],#[fg=$thm_blue]}#[bg=$thm_black] #{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] $statusline_session #[fg=$thm_fg,bg=$thm_black] #S"
set -g status-right "#[fg=$thm_magenta,bg=default,nobold,nounderscore,noitalics] #[fg=$thm_bg,bg=$thm_magenta,nobold,nounderscore,noitalics] ÔÜÆ #[fg=$thm_fg,bg=default] #{pane_current_path} #{?client_prefix,#[fg=$thm_red],#[fg=$thm_blue]}#[bg=default] #{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] $statusline_session #[fg=$thm_fg,bg=default] #S"

# current_dir
# setw -g window-status-format "#[fg=$thm_bg,bg=$thm_cyan] #I #[fg=$thm_gray,bg=$thm_black] #{b:pane_current_path} "
# setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_fg,bold,bg=$thm_bg] #{b:pane_current_path} "

# window names, default is current program
# setw -g window-status-format "#[fg=$thm_bg,bg=$thm_cyan] #I #[fg=$thm_gray,bg=$thm_black] #W "
# setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_fg,bold,bg=$thm_bg] #W "
# setw -g window-status-format "#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_gray,bg=$thm_black] #W "
setw -g window-status-format "#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_gray,bg=default] #W "
# setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_cyan] #I #[fg=$thm_cyan,bold,bg=$thm_bg] #W "
# setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_cyan] #I #[fg=$thm_cyan,bold,bg=$thm_black] #W "
# setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_cyan] #I #[fg=$thm_cyan,bold,bg=default] #W "
# setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_blue,bold,bg=$thm_black] #W "
setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_blue,bold,bg=default] #W "

# Set window names to show only the directory name, not the full path
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# modes
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_pink} bg=${thm_black} bold"

# }}}

# ---------------------------=== PLUGINS ===-------------------------- {{{

# To install Tmux Plugin Manager (TPM):
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# prerequisites: fzf, fzf-tmux, bat, zoxide (optional)
# set -g @plugin 'omerxx/tmux-sessionx'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Smart tmux session manager
# prerequisites:
# - zoxide: curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
# - fzf
# set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'

# tmux-resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'
# tmux-continuum
set -g @plugin 'tmux-plugins/tmux-continuum'

# Automatic restore
set -g @continuum-restore 'on'

# Reload nvim session in tmux-resurrect.
set -g @resurrect-strategy-nvim 'session'

# Initialize Tmux Plugin Manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# }}}

# TODO: this is jank and doesn't work correctly, but good enough for now

# Move active pane to the LEFT (horizontal layout)
unbind-key -T prefix H
bind-key -T prefix H \
    select-layout even-horizontal \; \
    if-shell '[ #{pane_at_left} -eq 0 ]' \
        'swap-pane -s #{pane_index} -t #{pane_index + 1}' ''

# Move active pane to the RIGHT (horizontal layout)
unbind-key -T prefix L
bind-key -T prefix L \
    select-layout even-horizontal \; \
    if-shell '[ #{pane_at_right} -eq 0 ]' \
        'swap-pane -s #{pane_index} -t #{pane_index - 1}' ''

# Move active pane to the BOTTOM (vertical layout)
unbind-key -T prefix J
bind-key -T prefix J \
    select-layout even-vertical \; \
    if-shell '[ #{pane_at_bottom} -eq 0 ]' \
        'swap-pane -D' ''

# Move active pane to the TOP (vertical layout)
unbind-key -T prefix K
bind-key -T prefix K \
    select-layout even-vertical \; \
    if-shell '[ #{pane_at_top} -eq 0 ]' \
        'swap-pane -U' ''
