{
  "$schema": "https://opencode.ai/config.json",
  "share": "manual",
  "autoupdate": true,
  "theme": "tymon-kanagawa",
  "instructions": [
    "*/AGENTS.md",
    "AGENTS.md",
    "README.md",
    "docs/**/*.md",
    "docs/**/*.puml",
    "pbdoc/docs.md",
  ],
  "provider": {
    "f5": {
      "npm": "@ai-sdk/openai-compatible",
      "name": "f5",
      "options": {
        "baseURL": "https://f5ai.pd.f5net.com/openai/",
        // Set your OPENAI_API_KEY environment variable, or read it from a file
        // "apiKey": "file:~/.openai_api_key",
        "apiKey": "{env:OPENAI_API_KEY}",
      },
      "models": {
        "gpt-5": {
          "name": "gpt-5",
        },
        "gpt-5-mini": {
          "name": "gpt-5-mini",
        },
        "gpt-5-nano": {
          "name": "gpt-5-nano",
        },
        "gpt-4.1": {
          "name": "gpt-4.1",
        },
        "gpt-4.1-mini": {
          "name": "gpt-4.1-mini",
        },
        "gpt-4o": {
          "name": "gpt-4o",
        },
        "gpt-4o-mini": {
          "name": "gpt-4o-mini",
        },
        "o4-mini": {
          "name": "o4-mini",
        },
        "o3": {
          "name": "o3",
        },
        "o3-mini": {
          "name": "o3-mini",
        },
        "o1": {
          "name": "o1",
        },
      },
    },
  },
  "mode": {
    "plan": {
      "model": "github-copilot/claude-sonnet-4",
    },
    "build": {
      "model": "github-copilot/claude-sonnet-4",
    },
  },
  "mcp": {
    "git": {
      "type": "local",
      "command": ["uvx", "mcp-server-git", "--repository", "${PWD}"],
    },
    "gitlab": {
      "type": "local",
      "command": ["npx", "-y", "@zereight/mcp-gitlab"],
      "environment": {
        "GITLAB_PERSONAL_ACCESS_TOKEN": "${GITLAB_TOKEN}",
        "GITLAB_API_URL": "https://gitlab.com/api/v4/",
        "GITLAB_READ_ONLY_MODE": "false",
        "USE_GITLAB_WIKI": "false",
        "USE_MILESTONE": "false",
        "USE_PIPELINE": "false",
      },
    },
    "context7": {
      "type": "local",
      "command": ["npx", "-y", "@upstash/context7-mcp"],
      "environment": {
        "DEFAULT_MINIMUM_TOKENS": "5000",
      },
    },
  },
  "agent": {
    "code-reviewer": {
      "description": "Reviews code for best practices and potential issues",
      "mode": "subagent",
      "model": "github-copilot/claude-sonnet-4",
      "prompt": "You are a code reviewer. Focus on security, performance, and maintainability.",
      "tools": {
        "write": false,
        "edit": false,
      },
    },
  },
  "formatter": {
    "prettier": {
      "command": ["~/.local/share/nvim/mason/bin/prettier", "--write", "$FILE"],
      "extensions": [".js", ".jsx", ".ts", ".tsx", ".json", ".html", ".css", ".scss", ".less", ".md", ".yaml", ".yml"],
    },
    "black": {
      "command": ["~/.local/share/nvim/mason/bin/black", "$FILE"],
      "extensions": [".py", ".pyi"],
    },
    "ruff": {
      "command": ["~/.local/share/nvim/mason/bin/ruff", "format", "$FILE"],
      "extensions": [".py", ".pyi"],
    },
    "stylua": {
      "command": ["~/.local/share/nvim/mason/bin/stylua", "$FILE"],
      "extensions": [".lua"],
    },
    "shfmt": {
      "command": ["~/.local/share/nvim/mason/bin/shfmt", "-i", "2", "-ci", "$FILE"],
      "extensions": [".sh", ".bash", ".zsh"],
    },
    "gofumpt": {
      "command": ["~/.local/share/nvim/mason/bin/gofumpt", "-w", "$FILE"],
      "extensions": [".go"],
    },
    "taplo": {
      "command": ["~/.local/share/nvim/mason/bin/taplo", "format", "$FILE"],
      "extensions": [".toml"],
    },
    "yamlfix": {
      "command": ["~/.local/share/nvim/mason/bin/yamlfix", "$FILE"],
      "extensions": [".yaml", ".yml"],
    },
    "usort": {
      "command": ["~/.local/share/nvim/mason/bin/usort", "format", "$FILE"],
      "extensions": [".py", ".pyi"],
    },
  },
  "lsp": {
    "bash-language-server": {
      "command": ["~/.local/share/nvim/mason/bin/bash-language-server", "start"],
      "extensions": [".sh", ".bash", ".zsh"],
    },
    "lua-language-server": {
      "command": ["~/.local/share/nvim/mason/bin/lua-language-server"],
      "extensions": [".lua"],
    },
    "gopls": {
      "command": ["~/.local/share/nvim/mason/bin/gopls"],
      "extensions": [".go", ".mod", ".sum"],
    },
    "rust-analyzer": {
      "command": ["~/.local/share/nvim/mason/bin/rust-analyzer"],
      "extensions": [".rs"],
    },
    "basedpyright": {
      "command": ["~/.local/share/nvim/mason/bin/basedpyright-langserver", "--stdio"],
      "extensions": [".py", ".pyi"],
    },
    "vtsls": {
      "command": ["~/.local/share/nvim/mason/bin/vtsls", "--stdio"],
      "extensions": [".js", ".jsx", ".ts", ".tsx", ".mjs", ".cjs", ".mts", ".cts"],
    },
    "yaml-language-server": {
      "command": ["~/.local/share/nvim/mason/bin/yaml-language-server", "--stdio"],
      "extensions": [".yaml", ".yml"],
    },
    "vscode-json-language-server": {
      "command": ["~/.local/share/nvim/mason/bin/vscode-json-language-server", "--stdio"],
      "extensions": [".json", ".jsonc"],
    },
    "marksman": {
      "command": ["~/.local/share/nvim/mason/bin/marksman", "server"],
      "extensions": [".md", ".markdown"],
    },
    "docker-langserver": {
      "command": ["~/.local/share/nvim/mason/bin/docker-langserver", "--stdio"],
      "extensions": [".dockerfile", "Dockerfile*"],
    },
    "docker-compose-langserver": {
      "command": ["~/.local/share/nvim/mason/bin/docker-compose-langserver", "--stdio"],
      "extensions": ["docker-compose.yml", "docker-compose.yaml", "compose.yml", "compose.yaml"],
    },
    "jsonnet-language-server": {
      "command": ["~/.local/share/nvim/mason/bin/jsonnet-language-server"],
      "extensions": [".jsonnet", ".libsonnet"],
    },
    "gitlab-ci-ls": {
      "command": ["~/.local/share/nvim/mason/bin/gitlab-ci-ls"],
      "extensions": [".gitlab-ci.yml", ".gitlab-ci.yaml"],
    },
    "fish-lsp": {
      "command": ["~/.local/share/nvim/mason/bin/fish-lsp", "start"],
      "extensions": [".fish"],
    },
    "golangci-lint-langserver": {
      "command": ["~/.local/share/nvim/mason/bin/golangci-lint-langserver"],
      "extensions": [".go"],
    },
    "taplo": {
      "command": ["~/.local/share/nvim/mason/bin/taplo", "lsp", "stdio"],
      "extensions": [".toml"],
    },
  },
}
