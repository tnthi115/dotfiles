{
  "$schema": "https://opencode.ai/config.json",
  "share": "manual",
  "autoupdate": true,
  "theme": "tymon-kanagawa",
  "instructions": [
    "*/AGENTS.md",
    "AGENTS.md",
    "README.md",
    "docs/**/*.md",
    "docs/**/*.puml",
    "pbdoc/docs.md",
  ],
  "provider": {
    "f5": {
      "npm": "@ai-sdk/openai-compatible",
      "name": "f5",
      "options": {
        "baseURL": "https://f5ai.pd.f5net.com/openai/",
        // Set your F5GPT_OPENAI_API_KEY environment variable, or read it from a file
        // "apiKey": "file:~/.f5gpt-openai-api-token"
        "apiKey": "{env:F5GPT_OPENAI_API_KEY}",
      },
      "models": {
        "gpt-5": {
          "name": "gpt-5",
        },
        "gpt-5-mini": {
          "name": "gpt-5-mini",
        },
        "gpt-5-codex": {
          "name": "gpt-5-codex",
        },
        "gpt-5-nano": {
          "name": "gpt-5-nano",
        },
        "gpt-4.1": {
          "name": "gpt-4.1",
        },
        "gpt-4.1-mini": {
          "name": "gpt-4.1-mini",
        },
        "gpt-4o": {
          "name": "gpt-4o",
        },
        "gpt-4o-mini": {
          "name": "gpt-4o-mini",
        },
        "o4-mini": {
          "name": "o4-mini",
        },
        "o3": {
          "name": "o3",
        },
        "o3-mini": {
          "name": "o3-mini",
        },
        "o1": {
          "name": "o1",
        },
      },
    },
  },
  // List of github copilot models available:
  // claude-3.5-sonnet
  // claude-3.7-sonnet
  // claude-sonnet-4
  // o3-mini
  // o4-mini
  // gpt-5
  // gpt-5-mini
  "agent": {
    "plan": {
      // "model": "github-copilot/claude-sonnet-4",
      // Use this when premium tokens are exhausted
      // "model": "github-copilot/o4-mini",
      "model": "f5/o3",
      // "model": "github-copilot/gpt-5-mini",
    },
    // Use this when premium tokens are exhausted
    // "cheap-plan": {
    //   "mode": "primary",
    //   // "model": "github-copilot/o4-mini",
    //   "model": "f5/o3",
    //   "tools": {
    //     "write": false,
    //     "edit": false,
    //     "bash": false,
    //   },
    // },
    "build": {
      // "model": "github-copilot/claude-sonnet-4",
      // "model": "github-copilot/gpt-4.1",
      // Use this when premium tokens are exhausted
      "model": "github-copilot/gpt-5-mini",
    },
    // Use this when premium tokens are exhausted
    "cheap-build": {
      "mode": "primary",
      // "model": "github-copilot/gpt-4.1",
      "model": "github-copilot/gpt-5-mini",
      "tools": {
        "write": true,
        "edit": true,
        "bash": true,
      },
    },
  },
  "mcp": {
    "git": {
      "type": "local",
      "command": ["uvx", "mcp-server-git", "--repository", "${PWD}"],
    },
    "gitlab": {
      "type": "local",
      "command": ["npx", "-y", "@zereight/mcp-gitlab"],
      "environment": {
        "GITLAB_PERSONAL_ACCESS_TOKEN": "{env:GITLAB_TOKEN}",
        "GITLAB_API_URL": "https://gitlab.com/api/v4/",
        "GITLAB_READ_ONLY_MODE": "false",
        "USE_GITLAB_WIKI": "false",
        "USE_MILESTONE": "false",
        "USE_PIPELINE": "false",
      },
    },
    // prompt: use context7
    "context7": {
      "type": "local",
      "command": ["npx", "-y", "@upstash/context7-mcp"],
      "environment": {
        "DEFAULT_MINIMUM_TOKENS": "5000",
      },
    },
    // prompt: /serena custom command or "activate serena project"
    "serena": {
      "type": "local",
      "command": [
        "uvx",
        "--from",
        "git+https://github.com/oraios/serena",
        "serena",
        "start-mcp-server",
      ],
    },
    // prompt: use sequential-thinking, chain-of-thought reasoning, break this down step by step
    "sequential-thinking": {
      "type": "local",
      "command": [
        "npx",
        "-y",
        "@modelcontextprotocol/server-sequential-thinking",
      ],
    },
    // E2B: Secure code execution sandbox
    // "e2b": {
    //   "type": "local",
    //   "command": ["npx", "-y", "@e2b/mcp-server"],
    // },
    // Exa: AI-native search engine
    // "exa": {
    //   "type": "local",
    //   "command": [
    //     "npx",
    //     "-y",
    //     "@exa-labs/exa-mcp-server"
    //   ]
    // },
  },
  "formatter": {
    "prettier": {
      "command": ["prettier", "--write", "$FILE"],
      "extensions": [
        ".js",
        ".jsx",
        ".ts",
        ".tsx",
        ".json",
        ".html",
        ".css",
        ".scss",
        ".less",
        ".md",
        ".yaml",
        ".yml",
      ],
    },
    "black": {
      "command": ["black", "$FILE"],
      "extensions": [".py", ".pyi"],
    },
    "ruff": {
      "command": ["ruff", "format", "$FILE"],
      "extensions": [".py", ".pyi"],
    },
    "stylua": {
      "command": ["stylua", "$FILE"],
      "extensions": [".lua"],
    },
    "shfmt": {
      "command": ["shfmt", "-i", "2", "-ci", "$FILE"],
      "extensions": [".sh", ".bash", ".zsh"],
    },
    "gofumpt": {
      "command": ["gofumpt", "-w", "$FILE"],
      "extensions": [".go"],
    },
    "taplo": {
      "command": ["taplo", "format", "$FILE"],
      "extensions": [".toml"],
    },
    "usort": {
      "command": ["usort", "format", "$FILE"],
      "extensions": [".py", ".pyi"],
    },
  },
  "lsp": {
    "bash-language-server": {
      "command": ["bash-language-server", "start"],
      "extensions": [".sh", ".bash", ".zsh"],
    },
    "lua-language-server": {
      "command": ["lua-language-server"],
      "extensions": [".lua"],
    },
    "gopls": {
      "command": ["gopls"],
      "extensions": [".go", ".mod", ".sum"],
    },
    "rust-analyzer": {
      "command": ["rust-analyzer"],
      "extensions": [".rs"],
    },
    "basedpyright": {
      "command": ["basedpyright-langserver", "--stdio"],
      "extensions": [".py", ".pyi"],
    },
    "vtsls": {
      "command": ["vtsls", "--stdio"],
      "extensions": [
        ".js",
        ".jsx",
        ".ts",
        ".tsx",
        ".mjs",
        ".cjs",
        ".mts",
        ".cts",
      ],
    },
    "yaml-language-server": {
      "command": ["yaml-language-server", "--stdio"],
      "extensions": [".yaml", ".yml"],
    },
    "marksman": {
      "command": ["marksman", "server"],
      "extensions": [".md", ".markdown"],
    },
    "docker-langserver": {
      "command": ["docker-langserver", "--stdio"],
      "extensions": [".dockerfile", "Dockerfile*"],
    },
    "docker-compose-langserver": {
      "command": ["docker-compose-langserver", "--stdio"],
      "extensions": [
        "docker-compose.yml",
        "docker-compose.yaml",
        "compose.yml",
        "compose.yaml",
      ],
    },
    "jsonnet-language-server": {
      "command": ["jsonnet-language-server"],
      "extensions": [".jsonnet", ".libsonnet"],
    },
    "fish-lsp": {
      "command": ["fish-lsp", "start"],
      "extensions": [".fish"],
    },
    "golangci-lint-langserver": {
      "command": ["golangci-lint-langserver"],
      "extensions": [".go"],
    },
    "taplo": {
      "command": ["taplo", "lsp", "stdio"],
      "extensions": [".toml"],
    },
  },
}
